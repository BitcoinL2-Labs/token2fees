import { makeContractDeploy, Pc, fetchNonce, getAddressFromPrivateKey, makeUnsignedContractDeploy, deserializeTransaction } from '@stacks/transactions';
import { STACKS_TESTNET } from '@stacks/network';
import { hexToBytes } from '@stacks/common';

document.getElementById('sponsor').addEventListener('click', async () => {
    const CONTRACT_NAME = 'sponsor-my-call-' + Date.now();

    const contractCall = document.getElementById('contractCall').value;
    const escapedContractCall = contractCall.replace('"', '\"');

    const CONTRACT_CODE = `
  (print { sponsored-call: "${escapedContractCall}" })
  (match (contract-call? 'STDZNQMRXTQZ6SRQQX61DZJKJV0KSRGHFETQQGZ5.crappy-token transfer
      'STDZNQMRXTQZ6SRQQX61DZJKJV0KSRGHFETQQGZ5 u1
  )
      success (begin
          (print { sponsored-call-response: (contract-call? ${contractCall}) })
          (ok true)
      )
      error (begin
          (print { sponsored-transfer-response: error })
          (ok false)
      )
  )
          `;

    //const postCondition = Pc.principal(stacksAddress).willSendGte(1).ft("STDZNQMRXTQZ6SRQQX61DZJKJV0KSRGHFETQQGZ5.crappy-token", "CrappyCoin");

    /*const response1 = await window.LeatherProvider.request("stx_signMessage", {
        message: "Hello world",
        messageType: "utf8",
        network: "testnet",
    });

    console.log("Response:", response1);*/

    const responseFake = await window.LeatherProvider.request("getAddresses");

    console.log("Response Fake:", responseFake.result);

    const stxAddress = responseFake.result.addresses.find(address => address.symbol === 'STX');

    console.log(stxAddress);

    const txOptions = {
        contractName: CONTRACT_NAME,
        codeBody: CONTRACT_CODE,
        //senderKey: privateKeyHex,
        //senderKey: '11'.repeat(32),
        network: STACKS_TESTNET,
        fee: 0,
        sponsored: true,
        publicKey: stxAddress.publicKey,
        //sign: false,
        //postConditions: [postCondition]
    };

    const transaction = await makeUnsignedContractDeploy(txOptions);
    //const transaction = await makeContractDeploy(txOptions);
    console.log('UNSIGNED', transaction);
    console.log(transaction.serializeBytes());
    console.log(transaction.serialize());

    const txHex = transaction.serialize();

    const response = await window.LeatherProvider?.request("stx_signTransaction", { txHex: txHex, network: "testnet" });//, stxAddress: "ST2BE44F9BEGHJEMH653ZGBQDNMH9HP59JGBAQFQ2" });

    console.log("CMP", txHex, response.result.txHex);
    console.log("AFTER", hexToBytes(response.result.txHex));
    console.log('RESULT', deserializeTransaction(response.result.txHex));

    console.log(txHex == response.result.txHex);

    const server_url = "http://localhost:3000/v2/transactions"

    const responseSponsor = await fetch(server_url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/octet-stream' },
        body: hexToBytes(response.result.txHex),
    });

    const result = await responseSponsor.json();
    if (result.error) {
        console.error('Broadcast error:', result.error);
    } else {
        console.log('Transaction ID:', result.txid);
        document.getElementById('result').innerHTML = 'Submitted with TXID: <a href="https://explorer.hiro.so/txid/0x' + result.txid + '?chain=testnet">' + result.txid + '</a>';
    }
});

//80800000000500b8bcb07f6344b42ab04250c86a6e8b75d3fdbbc6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000029cfc6376255a78451eeb4b129ed8eacffa2feef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000006031373706f6e736f722d6d792d63616c6c2d303030000001a50a2020287072696e74207b2073706f6e736f7265642d63616c6c3a202264756d6d7922207d290a2020286d617463682028636f6e74726163742d63616c6c3f20275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352e6372617070792d746f6b656e207472616e736665720a202020202020275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352075310a2020290a202020202020737563636573732028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d63616c6c2d726573706f6e73653a2028636f6e74726163742d63616c6c3f2064756d6d7929207d290a20202020202020202020286f6b2074727565290a202020202020290a2020202020206572726f722028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d7472616e736665722d726573706f6e73653a206572726f72207d290a20202020202020202020286f6b2066616c7365290a202020202020290a2020290a20202020202020202020
//80800000000500b8bcb07f6344b42ab04250c86a6e8b75d3fdbbc6000000000000000000000000000000000001958346020750d9afc62469e88cc64dceaa135ca6787c813ccca489678fc60f730c303a7ca1b2b6f8c3fbf6863c2edc98cbf3e09d41b37f0354084d81778f4cb40029cfc6376255a78451eeb4b129ed8eacffa2feef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000006031373706f6e736f722d6d792d63616c6c2d303030000001a50a2020287072696e74207b2073706f6e736f7265642d63616c6c3a202264756d6d7922207d290a2020286d617463682028636f6e74726163742d63616c6c3f20275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352e6372617070792d746f6b656e207472616e736665720a202020202020275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352075310a2020290a202020202020737563636573732028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d63616c6c2d726573706f6e73653a2028636f6e74726163742d63616c6c3f2064756d6d7929207d290a20202020202020202020286f6b2074727565290a202020202020290a2020202020206572726f722028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d7472616e736665722d726573706f6e73653a206572726f72207d290a20202020202020202020286f6b2066616c7365290a202020202020290a2020290a20202020202020202020


//8080000000050096e211e95ba1193a913147f82eedad2298d8a994000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000029cfc6376255a78451eeb4b129ed8eacffa2feef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000006031373706f6e736f722d6d792d63616c6c2d303030000001a50a2020287072696e74207b2073706f6e736f7265642d63616c6c3a202264756d6d7922207d290a2020286d617463682028636f6e74726163742d63616c6c3f20275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352e6372617070792d746f6b656e207472616e736665720a202020202020275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352075310a2020290a202020202020737563636573732028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d63616c6c2d726573706f6e73653a2028636f6e74726163742d63616c6c3f2064756d6d7929207d290a20202020202020202020286f6b2074727565290a202020202020290a2020202020206572726f722028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d7472616e736665722d726573706f6e73653a206572726f72207d290a20202020202020202020286f6b2066616c7365290a202020202020290a2020290a20202020202020202020
//8080000000050096e211e95ba1193a913147f82eedad2298d8a9940000000000000000000000000000000000011856b64211d79749a654dbbadd4d16a69f1f57b0f35d1c0e13ff892e773fe0977c047107bd28a2fd27bc108a39c105047132697bcc717ddb4ab0ecb33f05663f0029cfc6376255a78451eeb4b129ed8eacffa2feef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000006031373706f6e736f722d6d792d63616c6c2d303030000001a50a2020287072696e74207b2073706f6e736f7265642d63616c6c3a202264756d6d7922207d290a2020286d617463682028636f6e74726163742d63616c6c3f20275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352e6372617070792d746f6b656e207472616e736665720a202020202020275354445a4e514d525854515a3653525151583631445a4a4b4a56304b535247484645545151475a352075310a2020290a202020202020737563636573732028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d63616c6c2d726573706f6e73653a2028636f6e74726163742d63616c6c3f2064756d6d7929207d290a20202020202020202020286f6b2074727565290a202020202020290a2020202020206572726f722028626567696e0a20202020202020202020287072696e74207b2073706f6e736f7265642d7472616e736665722d726573706f6e73653a206572726f72207d290a20202020202020202020286f6b2066616c7365290a202020202020290a2020290a20202020202020202020